services:
  react-frontend:
    build:
      context: ./react-frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - HTTPS=true
      - SSL_CRT_FILE=/app/certs/cert.pem
      - SSL_KEY_FILE=/app/certs/key.pem
      - REACT_APP_API_BASE_URL=https://raspberrypi.local:5003/api
      - REACT_APP_API_URL=https://raspberrypi.local:5003
    volumes:
      - ./react-frontend/certs:/app/certs:ro
    depends_on:
      - flask-backend
  flask-backend:
    build:
      context: ./flask-backend
    ports:
      - "5003:5003"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
    environment:
      - FLASK_APP=app.py
      - FLASK_DEBUG=False
      - FLASK_ENV=production
      - PROD_DATABASE_URI=postgresql://postgres:password@db:5432/mydb
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:password@db:5432/mydb
      - SECRET_KEY=your-secret-key
      - CORS_ALLOWED_ORIGINS=https://raspberrypi.local:3000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./flask-backend/certs:/flask-backend/certs:ro

  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db-data:/var/lib/postgresql/data
